liste = [1,2,3,4,5]

iterator = iter(liste)

# this means "for i in liste:"
# while True:
#     try:
#         element = next(iterator)
#         print(element)
#     except StopIteration:
#         break 


class MyNumbers:
    def __init__(self,start,stop):
        self.start = start
        self.stop = stop


    def __iter__(self):
        return self

    def __next__(self):
        if self.start <= self.stop :
            x = self.start
            self.start+=1
            return x
        else:
            raise StopIteration

list = MyNumbers(10,20)


# for x in list:
#     print(x)

################################################

def cube():
    for i in range(5):
        yield i**3

for i in cube():
    print(i)


# *******************************

liste= (i**3 for i in range(5))  # [ ]içinde değil de ( ) içinde yazınca generator oluyor

for i in liste:
    print(i)


